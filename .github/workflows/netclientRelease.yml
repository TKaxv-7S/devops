name: Release Netclient
on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

env:
  GOPRIVATE: github.com/TKaxv-7S

jobs:

  release-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: TKaxv-7S/netclient
          ref: main_tk
      - name: setup go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: Setup git
        run: |
          git config --global user.name "Gravitl"
          git config --global user.email "info@netmaker.io"
      - name: Create Release Branch
        run: |
          git switch -c release-${{ inputs.version }}
      - name: Fix go mod
        run: |
          go mod edit -replace github.com/gravitl/netmaker=github.com/TKaxv-7S/netmaker@${{ inputs.version }}
          go get github.com/gravitl/netmaker@${{ inputs.version }}
          go mod tidy
          git commit -am 'update go mod for release'
      - name: Update Release Branch
        run: |
          git tag -f ${{ inputs.version }}
          git push origin release-${{ inputs.version }}
          git push origin ${{ inputs.version }}

  release-assets:
    needs: release-branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: TKaxv-7S/netclient
          ref: release-${{ inputs.version }}
          fetch-depth: 0
      - name: Get Tags
        run: |
          git fetch --force --tags
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          args: release --clean --release-notes release.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    needs: release-branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: TKaxv-7S/netclient
          ref: release-${{ inputs.version }}
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64, linux/arm/v7
          push: true
          tags: |
            tkaxv7s/netclient:${{ inputs.version }}
            tkaxv7s/netclient:latest

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: TKaxv-7S/netclient
          ref: release-${{ inputs.version }}
      - uses: actions/setup-node@v3
        with:
          node-version: 19
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: build gui
        run: |
          go build .
          cd gui/frontend
          npm ci
          npm run build
          cd ..
          go generate
          go build -tags desktop,production -ldflags "-w -s -H windowsgui" -o ../ncutils/windowsdaemon/gui.exe
          cd ..
          go install github.com/josephspurrier/goversioninfo/cmd/goversioninfo@latest
          go generate
          go build -tags desktop,production -ldflags "-w -s"
      - name: upload windows to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: netclient.exe
          tag: ${{ github.event.inputs.version }}
          overwrite: true
          asset_name: netclient-windows-amd64.exe

  darwin:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: TKaxv-7S/netclient
          ref: release-${{ inputs.version }}
      - uses: actions/setup-node@v3
        with:
          node-version: 19
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - run: |
          go build .
          cd gui
          go install github.com/wailsapp/wails/v2/cmd/wails@latest 
          ~/go/bin/wails build -skipbindings
          cp build/bin/netclient-2-0.app/Contents/MacOS/netclient-2-0 /tmp/netclient_darwin_amd64
      - name: upload darwin/amd to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: /tmp/netclient_darwin_amd64
          tag: ${{ github.event.inputs.version }}
          overwrite: true
          asset_name: netclient-darwin-amd64
